#!groovy

@Library("Infrastructure")

def type = "nodejs"
def product = "pcs"
def component = "frontend"

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

withPipeline(type, product, component) {
  onPR() {
    env.TEST_URL = "https://pcs-frontend-pr-${CHANGE_ID}.preview.platform.hmcts.net"
    afterAlways('functionalTest:preview') {
      try {
        publishHTML([
          allowMissing         : true,
          alwaysLinkToLastBuild: true,
          keepAll              : true,
          reportDir            : "playwright-report",
          reportFiles          : 'index.html',
          reportName           : 'PCS Frontend Functional Test Report'
        ])
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'reports/tests-results/ManageCasesFunctional/*'
      } catch (Error) {
        unstable(message: "${STAGE_NAME} is unstable: " + Error.toString())
      }
    }
  }
  onMaster() {
    env.TEST_URL = "https://pcs.aat.platform.hmcts.net/"
    afterAlways('functionalTest:aat') {
      try {
        publishHTML([
          allowMissing         : true,
          alwaysLinkToLastBuild: true,
          keepAll              : true,
          reportDir            : "playwright-report",
          reportFiles          : 'index.html',
          reportName           : 'PCS Frontend Functional Test Report'
        ])
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'reports/tests-results/ManageCasesFunctional/*'
      } catch (Error) {
        unstable(message: "${STAGE_NAME} is unstable: " + Error.toString())
      }
    }
  }
}
