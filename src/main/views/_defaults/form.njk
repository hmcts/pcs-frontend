{% extends "template.njk" %}

{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}

{% block content %}

{% if previousStepUrl %}
  {{ govukBackLink({
    text: "Back",
    href: previousStepUrl
  }) }}
{% endif %}

<div class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds">
    
    {% if step.description %}
      <span class="govuk-caption-l">{{ step.description }}</span>
    {% endif %}
    
    <h1 class="govuk-heading-l">{{ step.title }}</h1>

    {% if errors %}
      {% set errorList = [] %}
      {% for fieldName, error in errors %}
        {% set errorList = errorList.concat([{
          text: error.message if error.message else error,
          href: "#" + fieldName
        }]) %}
      {% endfor %}
      
      {{ govukErrorSummary({
        titleText: "There is a problem",
        errorList: errorList
      }) }}
    {% endif %}

    <form method="post">
      {% for fieldName, fieldConfig in step.fields %}
        {% set fieldValue = data[fieldName] %}
        {% set fieldError = errors[fieldName] if errors else false %}
        
        {% if fieldConfig.type == 'text' or fieldConfig.type == 'email' or fieldConfig.type == 'tel' %}
          {{ govukInput({
            id: fieldName,
            name: fieldName,
            type: fieldConfig.type if fieldConfig.type != 'text' else 'text',
            label: {
              text: fieldConfig.label or fieldName,
              classes: 'govuk-label--m'
            },
            hint: { text: fieldConfig.hint } if fieldConfig.hint else null,
            value: fieldValue,
            classes: fieldConfig.classes,
            attributes: fieldConfig.attributes,
            errorMessage: { text: fieldError.message if fieldError and fieldError.message else fieldError } if fieldError else null
          }) }}
          
        {% elif fieldConfig.type == 'textarea' %}
          {{ govukTextarea({
            id: fieldName,
            name: fieldName,
            label: {
              text: fieldConfig.label or fieldName,
              classes: 'govuk-label--m'
            },
            hint: { text: fieldConfig.hint } if fieldConfig.hint else null,
            value: fieldValue,
            classes: fieldConfig.classes,
            attributes: fieldConfig.attributes,
            errorMessage: { text: fieldError.message if fieldError and fieldError.message else fieldError } if fieldError else null
          }) }}
          
        {% elif fieldConfig.type == 'radios' %}
          {% set radioItems = [] %}
          {% for option in fieldConfig.options %}
            {% if option.value is defined %}
              {% set radioItems = radioItems.concat([{
                value: option.value,
                text: option.text,
                hint: { text: option.hint } if option.hint else null,
                checked: fieldValue == option.value
              }]) %}
            {% else %}
              {% set radioItems = radioItems.concat([{
                value: option,
                text: option,
                checked: fieldValue == option
              }]) %}
            {% endif %}
          {% endfor %}
          
          {{ govukRadios({
            idPrefix: fieldName,
            name: fieldName,
            fieldset: {
              legend: {
                text: fieldConfig.label or step.title,
                isPageHeading: not fieldConfig.label,
                classes: 'govuk-fieldset__legend--m'
              }
            },
            hint: { text: fieldConfig.hint } if fieldConfig.hint else null,
            items: radioItems,
            errorMessage: { text: fieldError.message if fieldError and fieldError.message else fieldError } if fieldError else null
          }) }}
          
        {% elif fieldConfig.type == 'checkboxes' %}
          {% set checkboxItems = [] %}
          {% for option in fieldConfig.options %}
            {% if option.value is defined %}
              {% set checkboxItems = checkboxItems.concat([{
                value: option.value,
                text: option.text,
                hint: { text: option.hint } if option.hint else null,
                checked: fieldValue and fieldValue.includes(option.value)
              }]) %}
            {% else %}
              {% set checkboxItems = checkboxItems.concat([{
                value: option,
                text: option,
                checked: fieldValue and fieldValue.includes(option)
              }]) %}
            {% endif %}
          {% endfor %}
          
          {{ govukCheckboxes({
            idPrefix: fieldName,
            name: fieldName,
            fieldset: {
              legend: {
                text: fieldConfig.label or step.title,
                isPageHeading: not fieldConfig.label,
                classes: 'govuk-fieldset__legend--m'
              }
            },
            hint: { text: fieldConfig.hint } if fieldConfig.hint else null,
            items: checkboxItems,
            errorMessage: { text: fieldError.message if fieldError and fieldError.message else fieldError } if fieldError else null
          }) }}
          
        {% elif fieldConfig.type == 'select' %}
          {% set selectItems = [{ value: '', text: 'Choose an option' }] %}
          {% for option in fieldConfig.options %}
            {% if option.value is defined %}
              {% set selectItems = selectItems.concat([{
                value: option.value,
                text: option.text,
                selected: fieldValue == option.value
              }]) %}
            {% else %}
              {% set selectItems = selectItems.concat([{
                value: option,
                text: option,
                selected: fieldValue == option
              }]) %}
            {% endif %}
          {% endfor %}
          
          {{ govukSelect({
            id: fieldName,
            name: fieldName,
            label: {
              text: fieldConfig.label or fieldName,
              classes: 'govuk-label--m'
            },
            hint: { text: fieldConfig.hint } if fieldConfig.hint else null,
            items: selectItems,
            errorMessage: { text: fieldError.message if fieldError and fieldError.message else fieldError } if fieldError else null
          }) }}
          
        {% elif fieldConfig.type == 'number' %}
          {{ govukInput({
            id: fieldName,
            name: fieldName,
            type: 'number',
            label: {
              text: fieldConfig.label or fieldName,
              classes: 'govuk-label--m'
            },
            hint: { text: fieldConfig.hint } if fieldConfig.hint else null,
            value: fieldValue,
            classes: fieldConfig.classes,
            attributes: fieldConfig.attributes,
            errorMessage: { text: fieldError.message if fieldError and fieldError.message else fieldError } if fieldError else null
          }) }}
          
        {% elif fieldConfig.type == 'date' %}
          {{ govukDateInput({
            id: fieldName,
            namePrefix: fieldName,
            fieldset: {
              legend: {
                text: fieldConfig.label or fieldName,
                classes: 'govuk-fieldset__legend--m'
              }
            },
            hint: { text: fieldConfig.hint } if fieldConfig.hint else null,
            errorMessage: { text: fieldError.message if fieldError and fieldError.message else fieldError } if fieldError else null,
            items: dateItems[fieldName]
          }) }}
        {% endif %}
      {% endfor %}

      <div class="govuk-button-group">
        {{ govukButton({
          text: 'Continue',
          attributes: { type: 'submit' }
        }) }}
      </div>
    </form>
  </div>
</div>

{% endblock %} 